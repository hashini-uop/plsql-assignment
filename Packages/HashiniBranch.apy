CREATE OR REPLACE PACKAGE BODY HASHINI_BRANCH_API AS
  -----------------Insert Branch
  PROCEDURE insert_branch(branch_name_              IN VARCHAR2,
                          branch_address_           IN VARCHAR2,
                          branch_manager_           IN VARCHAR2,
                          total_warehouse_capacity_ IN NUMBER,
                          company_reg_no_           IN NUMBER,
                          container_id_             IN NUMBER,
                          item_id_                  IN NUMBER) IS
    branch_id_ NUMBER;
  BEGIN
    SELECT HASHINI_BRANCH_SEQ.NEXTVAL INTO branch_id_ FROM dual;
    INSERT INTO HASHINI_BRANCH_TAB
      (branch_name,
       branch_address,
       branch_manager,
       total_warehouse_capacity,
       company_reg_no,
       container_id,
       item_id)
    VALUES
      (branch_name_,
       branch_address_,
       branch_manager_,
       total_warehouse_capacity_,
       company_reg_no_,
       container_id_,
       item_id_);
  END insert_branch;

  --------------Update Branch
  PROCEDURE update_branch(branch_id_                IN NUMBER,
                          branch_name_              IN VARCHAR2,
                          branch_address_           IN VARCHAR2,
                          branch_manager_           IN VARCHAR2,
                          total_warehouse_capacity_ IN NUMBER) IS
  BEGIN
    UPDATE HASHINI_BRANCH_TAB
       SET branch_name              = branch_name_,
           branch_address           = branch_address_,
           branch_manager           = branch_manager_,
           total_warehouse_capacity = total_warehouse_capacity_
     WHERE branch_id = branch_id_;
  END update_branch;

  ---------------Delete Branch
  PROCEDURE delete_branch(branch_id_ IN NUMBER) IS
  BEGIN
    DELETE FROM HASHINI_BRANCH_TAB WHERE branch_id = branch_id_;
  END delete_branch;

  ------Inventory Info----
  PROCEDURE get_current_inventory(branch_id_ IN NUMBER) IS
    available_qty_ NUMBER;
    item_id_       NUMBER;
  BEGIN
    FOR inventory_info IN (SELECT available_qty, item_id
                             FROM HASHINI_FOODITEM_TAB
                            WHERE item_id IN
                                  (SELECT item_id
                                     FROM HASHINI_CONTAINER_TAB
                                    WHERE container_id =
                                          (SELECT container_id
                                             FROM HASHINI_BRANCH_TAB
                                            WHERE branch_id = branch_id_))) LOOP
    
      available_qty_ := inventory_info.available_qty;
      item_id_       := inventory_info.item_id;
    
      DBMS_OUTPUT.PUT_LINE('Available Quantity: ' || available_qty_ ||
                           ', Item ID: ' || item_id_);
    END LOOP;
  END get_current_inventory;

  -------------Get Branch Name
  FUNCTION get_branch_name(branch_id_ IN NUMBER) RETURN VARCHAR2 IS
    branch_name_ VARCHAR2(200);
  BEGIN
    SELECT branch_name
      INTO branch_name_
      FROM HASHINI_BRANCH_TAB
     WHERE branch_id = branch_id_;
  
    RETURN branch_name_;
  
  END get_branch_name;

  -------------Get Branch Address
  FUNCTION get_branch_address(branch_id_ IN NUMBER) RETURN VARCHAR2 IS
    branch_address_ VARCHAR2(200);
  BEGIN
    SELECT branch_address
      INTO branch_address_
      FROM HASHINI_BRANCH_TAB
     WHERE branch_id = branch_id_;
  
    RETURN branch_address_;
  
  END get_branch_address;

  -------------Get Branch Manager
  FUNCTION get_branch_manager(branch_id_ IN NUMBER) RETURN VARCHAR2 IS
    branch_manager_ VARCHAR2(200);
  BEGIN
    SELECT branch_manager
      INTO branch_manager_
      FROM HASHINI_BRANCH_TAB
     WHERE branch_id = branch_id_;
  
    RETURN branch_manager_;
  
  END get_branch_manager;

  -------------Get total warehouse capacity
  FUNCTION get_total_warehouse_capacity(branch_id_ IN NUMBER) RETURN NUMBER IS
    total_warehouse_capacity_ NUMBER;
  BEGIN
    SELECT total_warehouse_capacity
      INTO total_warehouse_capacity_
      FROM HASHINI_BRANCH_TAB
     WHERE branch_id = branch_id_;
  
    RETURN total_warehouse_capacity_;
  
  END get_total_warehouse_capacity;

  ---------------Get remaining capacity
  FUNCTION get_remaining_capacity(branch_id_ IN NUMBER) RETURN NUMBER IS
    result_ NUMBER;
  BEGIN
    SELECT ((SELECT total_warehouse_capacity
               FROM HASHINI_BRANCH_TAB
              WHERE branch_id = branch_id_) -
           COALESCE((SELECT SUM(max_volume)
                       FROM HASHINI_CONTAINER_TAB
                      WHERE container_id IN
                            (SELECT container_id
                               FROM HASHINI_STORAGE_TAB
                              WHERE status = 'Active' AND
                                    branch_id = branch_id_) AND
                            branch_id = branch_id_),
                     0))
      INTO result_
      FROM dual;
  
    RETURN result_;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN NULL; -- Handle no data found exception
  END get_remaining_capacity;

END HASHINI_BRANCH_API;
/